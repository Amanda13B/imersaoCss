/*
reset do css sobre os padrões colocados do html
o fato de usar o * é para indicar que é para pegar tudo de forma generalizada, sem especificação
isso é definido de forma genérica para todo o código, qualquer coisa mais específica pode sobrescrevê-lo
*/
*
{
  margin: 0;
  /*usar margin 0 faz com que todas as margens colocadas automaticamente por padrão sejam 0*/
  padding: 0;
  /*o padding é uma borda "interna" do elemento no site, isso fará com que seja 0 também*/
  box-sizing: border-box;
  /*isso vai redefinir o tamanho da caixa do elemento mostrado na tela para que seu tamanho total
  seja igual ao tamanho de sua borda*/
}

body
{
  /*background-image: url("https://www.cebrac.com.br/view/img/cursos/criacao-games/criacao-games.jpg");*/
  background-color: #01061c;
  font-family: 'Roboto', sans-serif;
  font-size: 12px;
}

/*esse @media funciona como um if
se a tela tiver pelo menos 400px, vão ser aplicados esses estilos
*/
@media (min-width: 400px) 
{
  body
  {
    font-size: 14px;
  }
}

@media (min-width: 600px) 
{
  body
  {
    font-size: 18px;
  }
}

@media (min-width: 1200px) 
{
  body
  {
    font-size: 22px;
  }
}

header
{
  height: 100vh;
  display: flex;
  /*lembrando que o flex exibe os elementos um do lado do outro*/
  justify-content: center;
  align-items: center;
  /*ambas as propriedades justify-content e align-items só funcionam por conta do uso do display:flex que foi usado anteriormente
  o justify vai centralizar horizontalmente os elementos e o align items vai centralizar verticalmente*/
}

@media (min-width: 1200px) 
{
  header
  {
    height: 90vh;
  }
}

.menu
{
  background-color: white;
  position: fixed;
  /*usando o fixed, o elemento em questão mantém sua posição fixa na tela até mesmo com scroll. O fixed também mexe com a posição no
  eixo Z do elemento, fazendo com que ele fique por cima de todo o resto*/
  width: 100vw;
  /*isso fará com que a largura da barra de menu seja igual a largura do viewport (área de visualização da tela), ou seja,
  igual a 100% (100) do viewport width (vw)*/
  top: 0;
  /*o uso do top só funciona se um position estiver sendo usado (nesse caso, position:fixed). Dessa forma, ele vai fixar o elemento
  no topo da página, com uma distância própria dela (nesse caso, vai estar a uma distância 0 do topo da página)*/

  z-index: 1;
  /*aumenta a prioridade do menu no eixo Z, fazendo com que ele fique por cima de todos os elementos*/
}

.menu ul
{
  display: flex;
  justify-content: space-around;
}

.menu li
{
  list-style: none;
}

/*ao usar o .menu, está selecionando a class menu criada lá no html, ao dar espaço e usar o "a", significa que estou 
pegando a tag <a> que está dentro da classe menu (class menu) */
.menu a 
{
  display: block;
  padding: 10px 20px;
  /*para tags e elementos inline, ou seja, que não apresentam quebra de linha (por serem do tamanho do texto), 
  o padding não funciona naturalmente, apresenta muitos bugs. Para funcionar, é necessário transformar
  o display do elemento em block*/
  color: #0A0A48;
  text-decoration: none;
  transition: background-color 0.5s, color 0.5s;
  /*o transition é responsável por fazer as transições nos elementos passados (nesse caso, background color e color)
  o tempo de transição de cada um é passado também*/
}

/*o active funciona quando a opção for clicada (no caso, foi usado para a animação acontecer no touch do celular, já que não existe hover*/
.menu a:active,.menu a:hover
{
  text-decoration: underline;
  color: white;
  background-color:#0A0A48;
}

a
{
  color: #0BB5FF;
  text-decoration: underline;
}

a:hover
{
  text-decoration: none;
}

.contato .icons
{
  text-align: center;
}

.contato a
{
  text-decoration: none;
  font-size: 4em;
  transition: text-shadow 0.5s;
}


.contato a:active, .contato a:hover
{
  text-shadow: 0px 0px 15px rgba(255,255,255,0.5);
}

.titulos
{
  transform: scale(0.5) translateX(-70vw);
  opacity: 0;

  animation: ease-in 1.3s tituloAnim forwards;
  /*isso faz com que o elemento faça a animação determinada por esse nome. A propriedade forwards faz com que ele trave no
  último frame da animação e não desapareça*/
}

/*essa propriedade cria a animação, dentro dela passa os estados da animação em porcentagem. Nesse caso não foi necessário
inserir o 0% pois ele já inicia nesse estado lá na parte de cima em .titulos*/
@keyframes tituloAnim
{
  100%
  {
    transform: scale(1) translateX(0);
    opacity: 1;
  }
}

.site-subtitle,
.site-title
{
  color: #0BB5FF;
  text-align: center;
}

.site-title
{
  font-size: 3.2em;
  font-family: 'Allura', cursive;
}

.site-subtitle
{
  font-size: 2em;
  font-family: 'Allura', cursive;
  font-style: italic;
}

.contato, .secao-portfolio
{
  color : #0BB5FF;
  padding: 2em;
  min-height: 105vh;
  /*o uso de min-height é justamente pelo fato de o conteúdo ter um valor mínimo de altura, se ele fosse settado para ser
  sempre um tamanho fixo, ele pode não comportar o conteúdo dentro e acabar jogando um em cima do outro*/
}

.contato h2, .secao-portfolio h2
{
  font-family: 'Raleway', sans-serif;
  margin-bottom: 1em;
}

.secao-portfolio .grid
{
  display: grid;
  /*o uso do grid é para poder arrumar os elementos em linhas e colunas com maior precisão, ao contrário do flex onde
  a disposição é automática e não muito precisa*/

  gap: 2em;
  /*o gap é o espaço entre os elementos da grid*/
}

@media(min-width: 560px)
{
  .secao-portfolio .grid
  {
    grid-template-columns: 240px 240px;
    justify-content: center;
  }
}

@media(min-width: 730px)
{
  .secao-portfolio .grid
  {
    grid-template-columns: 320px 320px;
    justify-content: center;
  }
}

@media(min-width: 840px)
{
  .secao-portfolio .grid
  {
    grid-template-columns: 400px 400px;
    justify-content: center;
  }
}

@media(min-width: 1040px)
{
  .secao-portfolio .grid
  {
    grid-template-columns: 500px 500px;
    justify-content: center;
  }
}

@media(min-width: 1200px)
{
  .secao-portfolio .grid
  {
    grid-template-columns: 600px 600px;
    justify-content: center;
  }
}

.secao-portfolio figure
{
  text-align: center;
}

.img-portfolio
{
  height: 100px;
  width: auto;
  transition: transform 0.5s;
}

.img-portfolio2
{
  height: 120px;
  width: auto;
  transition: transform 0.5s;
}

.img-portfolio:hover
{
  transform: scale(1.1);
}

.img-portfolio2:hover
{
  transform: scale(1.1);
}

@media(min-width:400px)
{
  .img-portfolio
  {
    height: 150px;
    width: auto;
  }
  .img-portfolio2
  {
    height: 170px;
    width: auto;
  }
}

@media(min-width:560px)
{
  .img-portfolio
  {
    height: 170px;
    width: auto;
  }
}

@media(min-width:1200px)
{
  .img-portfolio,.img-portfolio2
  {
    height: 200px;
    width: auto;
  }
}


